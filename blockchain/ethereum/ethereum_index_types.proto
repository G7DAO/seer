syntax = "proto3";

option go_package = "github.com/G7DAO/seer/blockchain/ethereum";


message EthereumTransactionAccessList {
  string address = 1;
  repeated string storage_keys = 2;
}

// Represents a single transaction within a block
message EthereumTransaction {
  string hash = 1;
  uint64 block_number = 2;
  string from_address = 3;
  string to_address = 4;
  string gas = 5; // using string to handle big numeric values
  string gas_price = 6;
  string max_fee_per_gas = 7;
  string max_priority_fee_per_gas = 8;
  string input = 9; // could be a long text
  string nonce = 10;
  uint64 transaction_index = 11;
  uint64 transaction_type = 12;
  string value = 13; // using string to handle big numeric values
  uint64 indexed_at = 14; // using uint64 to represent timestamp
  uint64 block_timestamp = 15; // using uint64 to represent timestam
  string block_hash = 16; // Added field for block hash
  string chain_id = 17;  // Used as a field to match potential EIP-1559 transaction types
  string v = 18;  // Used as a field to match potential EIP-1559 transaction types
  string r = 19;  // Used as a field to match potential EIP-1559 transaction types
  string s = 20;  // Used as a field to match potential EIP-1559 transaction types
  repeated EthereumTransactionAccessList access_list = 21;
  string y_parity = 22; // Used as a field to match potential EIP-1559 transaction types
  repeated EthereumEventLog logs = 23; // The logs generated by this transaction
}

// Represents a single blockchain block
message EthereumBlock {
  uint64 block_number = 1;
  uint64 difficulty = 2;
  string extra_data = 3;
  uint64 gas_limit = 4;
  uint64 gas_used = 5;
  string base_fee_per_gas = 6; // using string to handle big numeric values
  string hash = 7;
  string logs_bloom = 8;
  string miner = 9;
  string nonce = 10;
  string parent_hash = 11;
  string receipts_root = 12;
  string sha3_uncles = 13;
  uint64 size = 14;
  string state_root = 15;
  uint64 timestamp = 16;
  string total_difficulty = 17;
  string transactions_root = 18;
  uint64 indexed_at = 19; // using uint64 to represent timestamp
  repeated EthereumTransaction transactions = 20;
}

message EthereumEventLog {
  string address = 1; // The address of the contract that generated the log
  repeated string topics = 2; // Topics are indexed parameters during log generation
  string data = 3; // The data field from the log
  uint64 block_number = 4; // The block number where this log was in
  string transaction_hash = 5; // The hash of the transaction that generated this log
  string block_hash = 6; // The hash of the block where this log was in
  bool removed = 7; // True if the log was reverted due to a chain reorganization
  uint64 log_index = 8; // The index of the log in the block
  uint64 transaction_index = 9; // The index of the transaction in the block
}

message EthereumBlocksBatch {
  repeated EthereumBlock blocks = 1;
    
  string seer_version = 2;
}
