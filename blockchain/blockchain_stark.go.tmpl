package {{.BlockchainNameLower}}

import (
	"bytes"
	"context"
	"encoding/base64"
	"encoding/hex"
	"encoding/json"
	"fmt"
	"log"
	"math/big"
	"strings"
	"sync"
	"time"

	"github.com/NethermindEth/starknet.go/rpc"
	"google.golang.org/protobuf/proto"

	seer_common "github.com/moonstream-to/seer/blockchain/common"
	"github.com/moonstream-to/seer/indexer"
	"github.com/moonstream-to/seer/version"
)

func NewClient(url string, timeout int) (*Client, error) {
	rpcClient, clientErr := rpc.NewClient(url)
	if clientErr != nil {
		return nil, clientErr
	}

	return &Client{rpcClient: rpcClient}, nil
}

// Client is a wrapper around the Starknet JSON-RPC client.

type Client struct {
	rpcClient *rpc.Client
}

// Client common

// ChainType returns the chain type.
func (c *Client) ChainType() string {
	return "starknet"
}
